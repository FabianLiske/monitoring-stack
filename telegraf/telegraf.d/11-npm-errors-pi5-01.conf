# --- NPM Error-Logs parsen ---
[[inputs.tail]]
  files = ["/var/log/npm/all_proxy_error.log"]
  initial_read_offset = "beginning"
  watch_method = "poll"
  data_format = "grok"

  grok_time_key = "ts"
  grok_time_format = "2006/01/02 15:04:05"
  grok_timezone = "UTC"

  name_override = "npm_error"

  tags = { domain = "service", proxy_id = "npm@pi5-01" }

  grok_patterns = ['%{NGINX_ERROR_ENRICHED}']

  grok_custom_patterns = '''
    NGXERRTS %{YEAR:year}/%{MONTHNUM:month}/%{MONTHDAY:day} %{TIME:time}
    NGINX_ERROR_ENRICHED %{NGXERRTS:ts} \[%{LOGLEVEL:level}\] %{NUMBER:pid:int}#%{NUMBER:tid:int}: \*%{NUMBER:conn:int} %{DATA:message}(?:, client: %{IPORHOST:client})?(?:, server: %{HOSTNAME:server})?(?:, request: "%{WORD:method} %{DATA:request_uri} HTTP/%{NUMBER:http_version}")?(?:, upstream: "(?:%{URI:upstream}|%{DATA:upstream})")?(?:, host: "%{DATA:host}")?(?:, referrer: "%{DATA:referrer}")?
  '''

  tag_keys = ["level","server"]

# ---- Abgeleitete Tags/Felder ----

# 1) Event-Typ aus der Message ableiten
[[processors.regex]]
  [[processors.regex.tags]]
    key = "message"
    pattern = "buffered to a temporary file"
    replacement = "buffered_tempfile"
    result_key = "event"

# 2) Upstream-Host aus der URL ziehen
[[processors.regex]]
  [[processors.regex.tags]]
    key = "upstream"
    pattern = "^https?://([^/:]+)"
    replacement = "${1}"
    result_key  = "upstream_host"

# 3) Typen konvertieren
[[processors.converter]]
  [processors.converter.fields]
    integer = ["pid","tid","conn"]
    float = ["http_version"]

# 4) Optional: Rauschen aus Fields entfernen
# [[processors.prune]]
#   field_drop = ["referrer"]
